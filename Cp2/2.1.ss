(define (max a b) (if (> a b) a b))
(define (min a b) (if (< a b) a b))
(define (gcd a b)
  (let ((maxone (max a b))
        (minone (min a b)))
    (if (= minone 0) maxone (gcd minone (remainder maxone minone)))
  )
)
(define (abs x) (if (< x 0) (- x) x))
(define (rat_sign n d) (if (< (* n d) 0) (- 1) 1))

(define (make_rat n d)
  (let ((factor (gcd (abs n) (abs d)))
        (sign   (rat_sign n d)))
    (cons (* sign (/ (abs n) factor)) (/ (abs d) factor))
  )
)
(define (numerator x) (car x))
(define (denominator x) (cdr x))
(define (print_rat x)
  (display (numerator x))
  (display "/")
  (display (denominator x))
  (newline)
)

(print_rat (make_rat (- 9) (- 6)))
(exit)
